Sin un índice global las consultas se relentizan mucho. Hay que usar scan, lo que implica que coge toda la tabla tod oel rato.
Al usar un índice global (nombre del usuario, userIdentity_userName), ordenado por fecha (eventTime)lo cual nos va a permitir usar query sobre
el nombre del usuario y filtrar por el tiempo.

SGI:
'userIdentity_userName-eventTime-index'
    used_count_events
    useed_services


Insertar en la tabla un elemento que sea toda la lista de usuarios
Vigilar el coste de eliminar e insertar

Tanto top_users commo actions_between_time hacen una query por usuario, debido a que el usuario es un
index y es más fácil buscar por el (querys en lugar de scan)
Tarda poco, el problema es cuando se hacen varias consultas seguidas, que puede no ir bien


Las consultas con 1.4GB y 1.6millones de items tardan demasiado, incluso desde la máquina EC2.
Es posible que se cambie la forma en que se introducen los items, eliminando campos innecesarios
Cambiado el diseño de la tabla. Ahora la clave primaria es el nombre de usuario junto con eventTime como sort Key (1 evento por usuario / seundo)
Las consultas se han quedado igual.
